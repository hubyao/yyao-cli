#!/usr/bin/env node

const program = require('commander')
const chalk = require('chalk')
const ora = require('ora')
const shell = require('shelljs')
const download = require('download-git-repo')

program
    .usage('[project-name]')
program.parse(process.argv)
    // 当没有输入参数的时候给个提示
if (program.args.length < 1) return program.help()

// 好比 vue init webpack project-name 的命令一样，第一个参数是 webpack，第二个参数是 project-name
let projectName = program.args[0]
    // 小小校验一下参数
    // if (!tplObj[templateName]) {
    //   console.log(chalk.red('\n Template does not exit! \n '))
    //   return
    // }
if (!projectName) {
    console.log(chalk.red('\n Project should not be empty! \n '))
    return
}

const url = "direct:https://github.com/hubyao/yyao-cli-tpl.git"

console.log(chalk.white('\n Start generating... \n'))
    // 出现加载图标
const spinner = ora("Downloading...");
spinner.start();
// 执行下载方法并传入参数
download(
    url,
    projectName, { clone: true },
    err => {
        if (err) {
            spinner.fail();
            console.log(chalk.red(`Generation failed. ${err}`))
            return
        }
        // 删除 .git 隐藏文件
        shell.rm('-rf', `${projectName}/.git`)

        // 下载安装
        // shell.cd(projectName)
        // shell.exec('yarn install')

        // 结束加载图标
        spinner.succeed();
        console.log(chalk.green('\n Generation completed!'))
        console.log('\n To get started')
        console.log(`\n    cd ${projectName} \n`)
    }
)